{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\himan\\\\OneDrive\\\\Documents\\\\GATech\\\\web\\\\src\\\\contexts\\\\AuthContext.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from 'react';\nvar AuthContext = React.createContext();\nexport var useAuth = function useAuth() {\n  return useContext(AuthContext);\n};\n\nvar AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(JSON.parse(sessionStorage.getItem('user')) || null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var loginUser = function loginUser(email, password) {\n    var user;\n    return _regeneratorRuntime.async(function loginUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            user = {\n              email: email,\n              password: password\n            };\n            sessionStorage.setItem('user', JSON.stringify(user));\n            setCurrentUser(user);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var logoutUser = function logoutUser() {\n    return _regeneratorRuntime.async(function logoutUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            sessionStorage.setItem('user', null);\n            setCurrentUser(null);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var value = {\n    currentUser: currentUser,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  return React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default AuthProvider;","map":{"version":3,"sources":["C:/Users/himan/OneDrive/Documents/GATech/web/src/contexts/AuthContext.js"],"names":["React","useState","useContext","AuthContext","createContext","useAuth","AuthProvider","children","JSON","parse","sessionStorage","getItem","currentUser","setCurrentUser","loginUser","email","password","user","setItem","stringify","logoutUser","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AAEA,IAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAO;AAC1B,SAAOH,UAAU,CAACC,WAAD,CAAjB;AACH,CAFM;;AAIP,IAAMG,YAAY,GAAG,SAAfA,YAAe,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AACjC,kBAAsCN,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,KAA8C,IAA/C,CAA9C;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,KAAP,EAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,YAAAA,IAFQ,GAED;AAACF,cAAAA,KAAK,EAALA,KAAD;AAAQC,cAAAA,QAAQ,EAARA;AAAR,aAFC;AAGdN,YAAAA,cAAc,CAACQ,OAAf,CAAuB,MAAvB,EAA+BV,IAAI,CAACW,SAAL,CAAeF,IAAf,CAA/B;AACAJ,YAAAA,cAAc,CAACI,IAAD,CAAd;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAOA,MAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAEfV,YAAAA,cAAc,CAACQ,OAAf,CAAuB,MAAvB,EAA+B,IAA/B;AACAL,YAAAA,cAAc,CAAC,IAAD,CAAd;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAMA,MAAMQ,KAAK,GAAG;AACVT,IAAAA,WAAW,EAAXA,WADU;AAEVE,IAAAA,SAAS,EAATA,SAFU;AAGVM,IAAAA,UAAU,EAAVA;AAHU,GAAd;AAMA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,QADL,CADJ;AAKH,CA3BD;;AA6BA,eAAeD,YAAf","sourcesContent":["import React, {useState, useContext} from 'react';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = ()  => {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nconst AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('user')) || null);\r\n\r\n    const loginUser = async (email, password) => {\r\n        // go to server and verify user and respond with token\r\n        const user = {email, password};\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        setCurrentUser(user);\r\n    };\r\n\r\n    const logoutUser = async () => {\r\n        // go to server and blacklist user's token\r\n        sessionStorage.setItem('user', null);\r\n        setCurrentUser(null);\r\n    }\r\n\r\n    const value = {\r\n        currentUser,\r\n        loginUser,\r\n        logoutUser\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}